---
- name: ' Konductor | Provision UPI Infra | 01-deploy-oauth-ldaps.yml'
  hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python3
    module: "deploy oauth ldaps"
    ansible_name_module: " Post Cluster Installation | Post deploy | {{ module }}"
  vars_files:
    - '../vars/vault.yml'
    - '../vars/common.yml'

  pre_tasks:
    - name: '{{ ansible_name_module }} | {{ openshift_cli }} whoami | check if there is valid session'
      command: >
        {{ openshift_cli }} whoami
      ignore_errors: yes
      register: existing_session

    - name: '{{ ansible_name_module }} | import_tasks | Conditional import of ocp-cluster-login role'
      import_tasks: roles/ocp-cluster-login/tasks/main.yml
      when:
        - existing_session.rc > 0

  tasks:
    - name: '{{ ansible_name_module }} | oc create | Create LDAP configmap }}'
      command: >
        {{ openshift_cli }} create \
          configmap custom-ca --from-file=ca.crt={{ ca-bundle-crt }} -n openshift-config

    - name: '{{ ansible_name_module }} | oc create | Create LDAP secret }}'
      command: >
        {{ openshift_cli }} create \
          secret generic ldap-secret --from-literal=bindPassword={{ bindPassword }}

    - name: '{{ ansible_name_module }} | template | Render Oauth Template'
      template:
        src: "templates/oauth-cluster.yml.j2"
        dest: "{{ staging_dir | d('/tmp', true) }}/oauth-cluster.yml"

    - name: '{{ ansible_name_module }} | command:{{ openshift_cli }} apply | deploy oauth/cluster '
      command: >
        {{ openshift_cli }} apply -f {{ staging_dir | d('/tmp', true) }}/oauth-cluster.yml
      register: oauth_applied

